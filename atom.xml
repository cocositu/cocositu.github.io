<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>咖啡红茶咖啡のBlog</title>
  
  
  <link href="http://coteaco.top/atom.xml" rel="self"/>
  
  <link href="http://coteaco.top/"/>
  <updated>2022-10-23T15:51:07.967Z</updated>
  <id>http://coteaco.top/</id>
  
  <author>
    <name>咖啡红茶咖啡</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lattice Diamond 3.12下载,安装与激活（免费获取license.dat）</title>
    <link href="http://coteaco.top/post/4cff0c21.html"/>
    <id>http://coteaco.top/post/4cff0c21.html</id>
    <published>2022-10-23T15:51:07.967Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lattice-Diamond下载与安装"><a href="#Lattice-Diamond下载与安装" class="headerlink" title="Lattice Diamond下载与安装"></a>Lattice Diamond下载与安装</h2><p>1.进入Lattice Diamond官网,官网地址:<a href="https://www.latticesemi.com/zh-CN">https://www.latticesemi.com/zh-CN</a>, 点击主页上方产品系列,选择软件工具中的Lattice Diamond。</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/1.png"></p><p>2.如果没有注册Lattice用户的，先去注册一个账户(创建新用户)，内容随便填一填，要记住邮箱这个很重要。(<strong>邮箱尽量把不要用qq邮箱，否则后面获取license的时候，要等两天，建议使用outlook或者gmail邮箱注册</strong>)</p><p>然后在下滑找到下载下方的软件，选择windows。</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/2.png"></p><p>3.目前，不要选择上面那个下载Diamoind基础板，继续向下滑，在下载软件与文档中找到Diamond 3.12 64-bit for windows大小1.6GB，选择并下载。</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/3.png"></p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/4.png"></p><p>4.解压后得到3.12.0.240_Diamond.exe双击运行</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/5.png"></p><p>5.安装路径自己选择，其他的直接next与yes。</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/6.png"></p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/7.png"></p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/8.png"></p><h2 id="2-Lattice-Diamond激活"><a href="#2-Lattice-Diamond激活" class="headerlink" title="2.Lattice Diamond激活"></a>2.Lattice Diamond激活</h2><p>1.安装完后不要着急打开软件，回到Lattice官网，选择进入产品系列下拉菜单中的软件授权界面。</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/9.png"></p><p>2.点击红框中蓝色字体的链接</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/10.png"></p><p>3.点击红框中蓝色字体的链接，点击并申请Node_Locked License；</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/11.png"></p><p>4.注册过Lattice Diamond账户的朋友将直接跳转到这个界面，在蓝色方框中填入电脑的物理地址，并勾选红色方框中的内容；</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/12.png"></p><p>5.运行命令窗口，(win+R输入cmd，回车)，在黑色框里输入ipconfig  &#x2F;all,查看你连接的网络，你主机物理地址，选择以太网适配器 以太网(<strong>带数字也可以，,在描述中带着PCIe的，确保你的物理地址不发生改变</strong>)。找到对应的物理地址。<strong>注意：这里复制的物理地址中间带有“-”，在填入时需要删掉，不然无法生成License</strong>；</p><p><strong>如果实在找不到有线网卡的物理地址，可以选择无线网卡，就是WLAN，描述中有Wi-Fi的那个物理地址，但是要在Win10设置&gt;&gt;网络&gt;&gt;WLAN中把随机硬件地址关掉，确保你的网卡物理地址不发生变化，再申请license</strong></p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/21.png"></p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/13.png" alt="13"></p><p>7.接着上述第四步，根据自己的需要选择是否授权相应的IP权限；(选择select all，还要勾选蓝框中的内容同意IP核使用协议。然后点击红框中的Generate License按钮生成许可文件，Lattice会将许可文件发送到你注册所用的邮箱中)</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/15.png"></p><p>8.在邮箱中找到License.dat文件后，将其复制到如图中红框所示的安装路径下。<strong>注意：我的安装路径设置的是D:\Software\LatticeSemiconductorDiamond_V3.12\，朋友们可以根据自己设置的路径找到对应的license文件夹</strong>；</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/16.png"></p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/17.png"></p><p>9.最后右击此电脑&gt;属性&gt;高级设置&gt;环境变量&gt;系统变量，如图所示：新建系统变量LM_LICENSE_FILE，为其指定license.dat的路径为：(这里的路径以你安装的路径为准<strong>不要盲目地按我的来</strong>)D:\Software\LatticeSemiconductorDiamond_V3.12\diamond\3.12\license\license.dat，点击确定即可.</p><p><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/18.png"></p><p>10.运行Lattice Diamond软件，出现如图所示的界面即表明安装成功。<br><img src="https://image.coteaco.cn/img/post_img/LatticeDiamond3.12%E4%B8%8B%E8%BD%BD%2C%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB%28%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96license.dat%29/19.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Lattice-Diamond下载与安装&quot;&gt;&lt;a href=&quot;#Lattice-Diamond下载与安装&quot; class=&quot;headerlink&quot; title=&quot;Lattice Diamond下载与安装&quot;&gt;&lt;/a&gt;Lattice Diamond下载与安装&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="“教程”" scheme="http://coteaco.top/categories/%E2%80%9C%E6%95%99%E7%A8%8B%E2%80%9D/"/>
    
    
    <category term="-FPGA" scheme="http://coteaco.top/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>Pytcharm使用Matplotlib绘图时，无法显示中文字体的解决方案</title>
    <link href="http://coteaco.top/post/f02f7fdd.html"/>
    <id>http://coteaco.top/post/f02f7fdd.html</id>
    <published>2022-10-23T15:51:07.967Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h2><p>最近再看《Python编程:从入门到实践》，学到<strong>第15章生成数据</strong>利用Pycharm中的matplotlib库进行绘图的时候，出现了一个问题，当我将所绘的图的横，纵坐标或者标题，希望加上一个中文描述的时候，比如，’横坐标’，’纵坐标’类似这样的描述方法。出现了很多人都会出现的一个问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">squares = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">ax.plot(squares, linewidth=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">ax.set_title(<span class="string">&quot;平方数&quot;</span>, fontsize=<span class="number">24</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&quot;值&quot;</span>, fontsize=<span class="number">14</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;值的平方&quot;</span>, fontsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">ax.tick_params(axis=<span class="string">&#x27;both&#x27;</span>, labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>结果不出意外成为了这样</p><img src="https://image.coteaco.cn/img/post_img/f02f7fdd/%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA.png" alt="" style="zoom: 67%;" /><h2 id="寻找问题"><a href="#寻找问题" class="headerlink" title="寻找问题"></a>寻找问题</h2><p>最开始以为是我的pycharm软件的语言配置出现了问题，后来左改一下，右改一下，发现并没有什么作用，我又觉得是中文编码的问题，找了一圈没什么发现，于是在网上查询很多资料发现出现这样的问题是因为Matplotlib库中没有与所输入的中文字符匹配的语言，所以无法正常显示中文，所以在这里把解决方案分享给大家。</p><p>pycharm显示的错误如下：</p><p>UserWarning: Glyph 26041 (\N{CJK UNIFIED IDEOGRAPH-65B9}) missing from current font.<br>  func(*args)</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>首先应该查询一下matplotlib中拥有哪些语言。可以通过以下代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontManager</span><br><span class="line"> </span><br><span class="line">mpl_fonts = <span class="built_in">set</span>(f.name <span class="keyword">for</span> f <span class="keyword">in</span> FontManager().ttflist)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;all font list get from matplotlib.font_manager:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> <span class="built_in">sorted</span>(mpl_fonts):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t&#x27;</span> + f)</span><br></pre></td></tr></table></figure><img src="https://image.coteaco.cn/img/post_img/f02f7fdd/YaHei.png" alt="" style="zoom: 67%;" /><img src="https://image.coteaco.cn/img/post_img/f02f7fdd/YouYuan.png" alt="" style="zoom: 80%;" /><p>输出结果中我们可以发现一系列包含中文的语言格式，例如Microsoft YaHei，YouYuan等</p><p>对于这个问题我就比较疑惑了，既然他有最后却无法成功显示，既然他有这种语言，那么我们在程序里，将他设置成包含中文语言就可以，实现方式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.rc(<span class="string">&quot;font&quot;</span>, family=<span class="string">&#x27;Microsoft YaHei&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这两行代码，就将显示图片时的语言设置成为了 Microsoft YaHei,也就是我们电脑里面常用的微软雅黑这种字体</p><p>运行程序，结果不出所料地显示了中文：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="comment">#设置语言为‘微软雅黑’</span></span><br><span class="line">matplotlib.rc(<span class="string">&quot;font&quot;</span>, family=<span class="string">&#x27;Microsoft YaHei&#x27;</span>)</span><br><span class="line"></span><br><span class="line">squares = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">ax.plot(squares, linewidth=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">ax.set_title(<span class="string">&quot;平方数&quot;</span>, fontsize=<span class="number">24</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&quot;值&quot;</span>, fontsize=<span class="number">14</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;值的平方&quot;</span>, fontsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">ax.tick_params(axis=<span class="string">&#x27;both&#x27;</span>, labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="https://image.coteaco.cn/img/post_img/f02f7fdd/%E6%AD%A3%E7%A1%AE%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87.png" alt="" style="zoom:67%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;发现问题&quot;&gt;&lt;a href=&quot;#发现问题&quot; class=&quot;headerlink&quot; title=&quot;发现问题&quot;&gt;&lt;/a&gt;发现问题&lt;/h2&gt;&lt;p&gt;最近再看《Python编程:从入门到实践》，学到&lt;strong&gt;第15章生成数据&lt;/strong&gt;利用Pycharm中的ma</summary>
      
    
    
    
    <category term="“编程”" scheme="http://coteaco.top/categories/%E2%80%9C%E7%BC%96%E7%A8%8B%E2%80%9D/"/>
    
    
    <category term="-python" scheme="http://coteaco.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Technology changes our lives</title>
    <link href="http://coteaco.top/post/5447c1f8.html"/>
    <id>http://coteaco.top/post/5447c1f8.html</id>
    <published>2022-10-23T15:00:00.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<p>Today ,more than half of the world’s population lives in cities. The urbanization process started in the late 1700s ,and has been increasing since then. The prediction is that by 2050, 66 percent of the population will live in cities and the United Nations the World Health Organization, the World Economic Forum,are warning us, if we don’t plan for the increased density,current problem in our cities, like inequality,congestion,crime can only get worse.</p><p>​    As a result,urban planners and city developers are putting a lot of effort and creativity in designing our future, denser, bigger cities.</p><p>​    But I have a different opinion . I think urbanization is actually reaching the end of its cycle, and now people are going to start moving back to the countryside. And you may think, “ But what about the trend? “ Well, let me tell you. socioeconomic trends don’t last forever. You know, 12000 years ago, every everybody was perfectly happy. roaming the land, hunting and gathering. And then,the trend changes, and the new thing is to live in a farm and have cattle, until it changes again.</p><p>When we get to the in Industrial revolution. Actually, that is what started the urbanization process. And you know what triggered it?Steam power, machines,new chemical processes etc. </p><p>In two words, technological innovation. And I believe technology can also bring the end of this cycle.</p><p>I love innovation .It allows me to work with drones with three D printers and smart equipment , It’s a lot of fun sometimes. Now, some of these technologies are opening new possibilities that will radically change the way we do things before., and in a few years, they may allow us to enjoy the benefits of city life from anywhere.    </p><p>Think about it. If, if you could live in place with a lower crime rates and more space and a lower cost of living and less traffic, of course, many people would want that, but they feel they don’t have a choice. You have to live in the city.</p><p>Well, in the past, people move to the cities, not because they loved the city itself, but for the things you could have in a city,more job opportunities, easier access to services and goods and a rich social life. So let’s dive deeper. More jobs and career opportunities. Is that still true today, because the office people are starting to realize that working in the office and being in the office may not be the same thing anymore.</p><p> According to a study by Global Workplace Analytics, more than 80 percent of the US workforce would like to work form home. And do you know how much it costs for a company to even have an office? 11000 dollars per employee per year. If only half of those workers would telework even 50 percent of the time, the savings in the states would exceed 500 billion dollars and it could reduce greenhouse gases by 54 million tons. That is the equivalent of 10 million cars off the streets for a whole years. But even though most people would want to telework,current technology makes the experience isolating. It’s not comfortable. It doesn’t feel like being there. But that is going to change by the convergence of two technologies: augmented reality and telepresence robots.</p><p>​    Augments reality already today allows you to take your office environment everywhere with you. All you need is a wearable computer,a pair of smart glasses,and you can take your emails and your spreadsheets with you wherever you go. </p><p>And video conferences and video calls have become very common these days, but they still need improvement. I mean, all those little faces on a flat screen, sometimes you don’t even know who is talking. Now, we already have something way better than static videocalls: your average telepresence robot. You can control, you can move around ,you can control what you’re looking at. It’s way better, but far form perfect. </p><p>You know how they say that most human communication is nonverbal? Well , the robot doesn’t give you any of that. But with advances in augmented reality,it will be easy to wrap the robot in a nice hologram that actually looks and moves like a person. That will do it. Or else, forget the robot. We go full VR, and everybody meets in cyberspace. Give it a couple of years and that will feel so real, you won’t tell the difference. So what was the next reason why people move to cities? </p><p>Access to services and goods. But todays you can do all that online. According to a study made by comScore, online shoppers in the US last year did more than half of their retail purchases online, and the global market for e-commerce is estimated to be at two trillion dollars. And it’s expected to reach 2.38 by the end of 2017, according to eMarker. Now, from a logistics standpoint, density is good for deliveries. Supplying goods to a shopping mall is easy. You can send big shipments to shop, and people will go there, pick it up and take it home themselves. </p><p>E-commerce means we need to ship onesies and have them home delivered. That’s more expensive. It’s like the difference between having a birthday party for people or bring a piece of the cake to each of your 20 friends at their place. But at least in the city, they live close each other. Density helps. Now, e-commerce deliveries in the countryside, those take forever. The truck sometimes needs to drive miles between one address and the next one. </p><p>Those are the most expensive deliveries of all. But we already have a solution for that: drones. A vehicle carrying a squadron of drones. The driver does some of the deliveries while the drones are flying back and forth the truck as it moves. That way, the average cost for delivery is reduced, and voila: affordable e-commerce services in the countryside. You will see: the new homes of our teleworks will probably have a drone pod in the yard. So once the final mile delivery is not a problem, you don’t need to be in the city to buy things anymore. </p><p>So that’s two. Now what was the third reason why people move to cities? A rich social life. They would need to be in the city for that these days. Because people these days, they make friends, they chat, gossip and flirt from the comfort of their sofa. And while wearing their favorite pajamas. There are over two billon active social media user in the world. There are over two billion active social media users in the world.</p><p>​    In a way , that makers you think like we are connected no matter where we are. But OK, not completely. Sometimes you still need some real human contact.  </p><p>​    Ironically, the city with its population density, is not always the best for that.                      </p><p>Actually ,as social group become smaller, they grow stronger. A recent study made in the UK by the Office for National Statistics showed a higher life satisfaction rating among people living in rural areas. So as people settle in the countryside, well, they will buy local groceries, fresh groceries, foodstuff, maintenance services. So handymen, small workshops, service companies will thrive.</p><p> Maybe some of the industrial workers from the cities displaced by the automation will find a nice alternative job here , and they will move too. And as people move to the countryside, how is that going to be? Think about autonomous, off-the-grid house with solar panels, with wind turbines and waste recycling utilities, our new homes producing their own energy and using it to also power the family car.  </p><p>I mean, cities have always been regarded as being more energy-efficient, but let me tell you, repopulating the countryside can be eco too. By now, you’re probably thinking of all the advantages of country living. I just think they will once they realize they can have the same benefits the city has. but if you don’t like country, I have good news for you, too. Cities will not disappear. But as people move out, a lower density will help them recover a better flow and balance. </p><p>Anyway, I guess now you have some thinking to do.do you still think you need to live in the city? and more importantly, do you want to?</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Today ,more than half of the world’s population lives in cities. The urbanization process started in the late 1700s ,and has been increas</summary>
      
    
    
    
    <category term="“English”" scheme="http://coteaco.top/categories/%E2%80%9CEnglish%E2%80%9D/"/>
    
    
    <category term="English" scheme="http://coteaco.top/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>python基本输入</title>
    <link href="http://coteaco.top/post/4bc48cd.html"/>
    <id>http://coteaco.top/post/4bc48cd.html</id>
    <published>2022-09-24T16:00:00.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="✨基本介绍"><a href="#✨基本介绍" class="headerlink" title="✨基本介绍"></a>✨基本介绍</h2><p>​在 <code>Python3.x</code> 中 <code>raw_input()</code>和<code>input()</code>进行了整合，去除了 <code>raw_input( )</code>, 仅保留了<code>input( )</code>函数，其接收任意任性输入，将所有输入默认为字符串处理，并返回字符串类型。</p><p>​ <code>input() </code>函数接受一个标准输入数据，返回为<code> string</code> 类型。</p><h2 id="🎈input-输入"><a href="#🎈input-输入" class="headerlink" title="🎈input()输入"></a>🎈input()输入</h2><h3 id="0-基本用法"><a href="#0-基本用法" class="headerlink" title="0. 基本用法"></a>0. 基本用法</h3><p><strong>input</strong>括号里面写的是输入提示信息，input()输入的是字符串形式，如果要是输入其他类型需要进行转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">变量 = input(&quot;提示信息/输入介绍&quot;)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = <span class="built_in">input</span>(“intput”)</span><br></pre></td></tr></table></figure><h3 id="1-输入字符串"><a href="#1-输入字符串" class="headerlink" title="1. 输入字符串"></a>1. 输入字符串</h3><p>非常简单🎨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 字符串输入</span></span><br><span class="line">_<span class="built_in">str</span> = <span class="built_in">input</span>(<span class="string">&quot;输入一个字符串:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;输出字符串:<span class="subst">&#123;_<span class="built_in">str</span>&#125;</span>,输出字符串类型:<span class="subst">&#123;<span class="built_in">type</span>(_<span class="built_in">str</span>)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BE%93%E5%85%A5.png"></p><h3 id="2-输入数字"><a href="#2-输入数字" class="headerlink" title="2. 输入数字"></a>2. 输入数字</h3><p>只需在<code>input</code>外面套上一层<strong>int</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 数字输入</span></span><br><span class="line">_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入一个整数:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;输出整数:<span class="subst">&#123;_num&#125;</span>,输出字符串类型:<span class="subst">&#123;<span class="built_in">type</span>(_num)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p><em>输出：</em><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E6%95%B0%E5%AD%97%E8%BE%93%E5%85%A5.png"></p><h3 id="3-输入一维数组"><a href="#3-输入一维数组" class="headerlink" title="3.输入一维数组"></a>3.输入一维数组</h3><p>input只能输入一行其中的空格也会被包括进去，所以我们要使用split(“ “)空格分隔，strip()是去掉首末尾的特定字符。<em>ps：默认不填是去掉首尾空格</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 一维数组输入</span></span><br><span class="line">arr = <span class="built_in">input</span>(<span class="string">&quot;输入一维数组，空格间隔:&quot;</span>).strip().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(arr, <span class="string">&quot;\narr元素类型:&quot;</span>,<span class="built_in">type</span>(arr[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p><em>输出：</em><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BE%93%E5%85%A5.png"></p><p>这里使用了列表和字典两种写法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 一维数组数组输入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##方法一</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;数组长度:&quot;</span>))</span><br><span class="line"><span class="comment"># 输入数组</span></span><br><span class="line">arr = [<span class="built_in">int</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">input</span>(<span class="string">&quot;输入一维数组，空格间隔:&quot;</span>).split(<span class="string">&quot; &quot;</span>)]</span><br><span class="line"><span class="built_in">print</span>(arr, <span class="string">&quot;\narr元素类型:&quot;</span>,<span class="built_in">type</span>(arr[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment">##方法二</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;数组长度:&quot;</span>))</span><br><span class="line">arr = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>(<span class="string">&quot;输入一维数组，空格间隔:&quot;</span>).split(<span class="string">&quot; &quot;</span>)))</span><br><span class="line"><span class="built_in">print</span>(arr, <span class="string">&quot;\narr元素类型:&quot;</span>,<span class="built_in">type</span>(arr[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p><em>输出:</em><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E4%B8%80%E7%BB%B4%E6%95%B0%E5%AD%97%E6%95%B0%E7%BB%84%E8%BE%93%E5%85%A5.png"></p><h3 id="4-输入二维数组"><a href="#4-输入二维数组" class="headerlink" title="4.输入二维数组"></a>4.输入二维数组</h3><p>对于二维数组的输入，情况变得复杂起来，下面我们看看什么情况吧。</p><h4 id="不恰当的方法"><a href="#不恰当的方法" class="headerlink" title="不恰当的方法"></a>不恰当的方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 二维数组输入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##不恰当的方法</span></span><br><span class="line"><span class="comment">#行，列数不相同</span></span><br><span class="line">_row = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入行数:&quot;</span>))</span><br><span class="line">_<span class="built_in">list</span> = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入列数:&quot;</span>))</span><br><span class="line">arr = [[<span class="number">0</span>] * _<span class="built_in">list</span>] * _row</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(_row):</span><br><span class="line">    arr[i] = <span class="built_in">input</span>().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(_<span class="built_in">list</span>):</span><br><span class="line">        arr[i][j] = <span class="built_in">int</span>(arr[i][j])</span><br><span class="line"><span class="built_in">print</span>(arr) </span><br></pre></td></tr></table></figure><p>​此时我们初始化一个2行3列的列表，令<code>arr[0][0]=1</code>，这时我们发现第1行和第2行的第1个元素都变成了1，不对啊，我们不是只动了第1行第1个元素，怎么第二行也变了？</p><p>​我们看<code>arr = [[0] * _list] * _row</code> 这句代码，首先我们定义了一个<code>[[0] * _list]</code>，代表长度为_list的元素全为0的列表这里是没有问题的，但是后面的<code>* row</code>,是将这个列表<strong>浅拷贝</strong>，形成连接，而不是真正的创建了三个列表，如同C中的指针，三个指针同时指向了一个列表，所以对其中一个进行改变，另外的也会发生变化。所以这种写法并不恰当</p><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E9%94%99%E8%AF%AF.png" style="zoom:67%;" /><p><em>输出：</em><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA.png" style="zoom:80%;" /></p><h4 id="恰当的方法"><a href="#恰当的方法" class="headerlink" title="恰当的方法"></a>恰当的方法</h4><p>所以我们要写成下面这种<code>arr = [[0] * _list for i in range(_row)]</code>，这样写才是创建了<code>_row</code>个列表，形成一个二维列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##恰当的方法</span></span><br><span class="line">_row = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入行数:&quot;</span>))</span><br><span class="line">_<span class="built_in">list</span> = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入列数:&quot;</span>))</span><br><span class="line">arr = [[<span class="number">0</span>] * _<span class="built_in">list</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(_row)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(_row):</span><br><span class="line">    arr[i] = <span class="built_in">input</span>().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(_<span class="built_in">list</span>):</span><br><span class="line">        arr[i][j] = <span class="built_in">int</span>(arr[i][j])</span><br><span class="line"><span class="comment">#打印二维数组</span></span><br><span class="line"><span class="built_in">print</span>(arr)        </span><br><span class="line"></span><br><span class="line"><span class="comment">##简化写法</span></span><br><span class="line">_row = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入行数:&quot;</span>))</span><br><span class="line">_<span class="built_in">list</span> = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入列数:&quot;</span>))</span><br><span class="line">arr = [[<span class="number">0</span>] * _<span class="built_in">list</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(_row)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(_row):</span><br><span class="line">    arr[i] = <span class="built_in">input</span>().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    arr[i] = [<span class="built_in">int</span>(j) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(arr[i])]</span><br></pre></td></tr></table></figure><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%AD%A3%E7%A1%AE.png" style="zoom: 67%;" /><img src="https://image.coteaco.cn/img/post_img/4bc48cd/%E6%AD%A3%E7%A1%AE%E8%BE%93%E5%87%BA%C2%B7.png" style="zoom:80%;" /><h3 id="5-多维数组输入-调用库函数"><a href="#5-多维数组输入-调用库函数" class="headerlink" title="5. 多维数组输入(调用库函数)"></a>5. 多维数组输入(调用库函数)</h3><p>​可以像创建二维数组那样创建多维数组，但是那样写比较复杂，此时我们可以直接调用第三方库<code>numpy</code>.</p><p>​<code>numpy.ndarray</code> 可以创建一个 C 一样的数组。必填参数 <code>shape</code> 决定数组的形状，如 <code>numpy.ndarray((7, 9, 11))</code> 创建的数组相当于 C 中的 <code>float[7][9][11]</code>；选填参数 <code>dtype</code> 决定数组中的数据类型，默认为 <code>float</code>，如 <code>numpy.ndarray((3, 5), int)</code> 就相当于 C 中的 <code>int[3][5]</code>.</p><p>此外 <code>numpy.array</code>可以将一个 Python <code>list</code> 转化成 <code>numpy.ndarray</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr = np.ndarray((<span class="number">7</span>, <span class="number">9</span>), <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        arr[i][j] = <span class="number">0</span>  <span class="comment"># np.ndarray 会不加初始化地从内存分配一块空间，使用前需要初始化，因此不推荐这种用法</span></span><br><span class="line">arr2 = np.array([[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>)], <span class="built_in">int</span>)  <span class="comment"># 同样可以填入 dtype</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(arr, <span class="string">&quot;\n&quot;</span>, arr2)</span><br><span class="line"><span class="comment"># 现在可以像操作 C 列表一样操作 arr 和 arr2 了</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;✨基本介绍&quot;&gt;&lt;a href=&quot;#✨基本介绍&quot; class=&quot;headerlink&quot; title=&quot;✨基本介绍&quot;&gt;&lt;/a&gt;✨基本介绍&lt;/h2&gt;&lt;p&gt;​		在 &lt;code&gt;Python3.x&lt;/code&gt; 中 &lt;code&gt;raw_input()&lt;/code&gt;和&lt;co</summary>
      
    
    
    
    <category term="“编程”" scheme="http://coteaco.top/categories/%E2%80%9C%E7%BC%96%E7%A8%8B%E2%80%9D/"/>
    
    
    <category term="-python" scheme="http://coteaco.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>浅话轻谈--藏在扉页中的青春</title>
    <link href="http://coteaco.top/post/48c883e1.html"/>
    <id>http://coteaco.top/post/48c883e1.html</id>
    <published>2022-09-23T16:10:10.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<p>​</p><p>​不知从什么时候开始我们的生活中书的影子越来越少了，上课复习预习时总是想去网课，遇到问题，也是喜欢直接问老师或者用手机搜，我们对知识的汲取越来越少的依赖书了。身边去图书馆借书的人寥寥无几，即使有也是借一些小说之类似的，那些大部头的工具书无人问津。<strong>书籍是人类进步的阶梯</strong>，这名言在这个时代似乎已经落后了。</p><p>​来到大学已经一年多了，买书的钱少说3000块钱，但是我只是单纯的去买，看的却很少。。。细细想来，似乎还不如不买书。我想为什么我们越来越少的去读书了。在这个学期开始之间，其实我订了一个目标，这个学期至少要看20本书，但是在这几个周的时间里，我连一本也没有看完。我仔细回想了一下，在繁忙的生活中，剩下的只是零零散散的时间，很少能有一段较长的时间用来阅读。在琐碎的时间里，我更想用那些不用思考的短视频以及那些博人眼球新闻来消磨。回过头来却说这，我真的好忙没有时间。。。</p><p>书曾给我带来思考，给予我知识。或许在信息层面上视频图片的信息密度远远大于文字，但是在这个匆匆忙忙世界，能有一段时间让你沉浸在书中幻想，不去想那些纷扰也是不错的。我喜欢村上春树，正是因为他笔下全是小人物，平平小事，我们平凡人能在其中找到自己的身影，平凡才是最震撼的。</p><p>我希望在这繁忙的世间里，你我都能独享一段宁静的时光不被外物所打扰。</p><p>白天触物有所思，夜晚就写下来。没有什么逻辑，也不是什么作文。想到什么就写什么，这才是写作。</p><p>在结尾分享最近我在看的两本书《一九七三年的弹子球》《木麻黄树》：</p><p><img src="https://image.coteaco.cn/img/post_img/48c883e1/read.jpg" alt="read"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​	&lt;/p&gt;
&lt;p&gt;​	不知从什么时候开始我们的生活中书的影子越来越少了，上课复习预习时总是想去网课，遇到问题，也是喜欢直接问老师或者用手机搜，我们对知识的汲取越来越少的依赖书了。身边去图书馆借书的人寥寥无几，即使有也是借一些小说之类似的，那些大部头的工具书无人问津。&lt;st</summary>
      
    
    
    
    <category term="“随笔”" scheme="http://coteaco.top/categories/%E2%80%9C%E9%9A%8F%E7%AC%94%E2%80%9D/"/>
    
    
    <category term="-浅话轻谈" scheme="http://coteaco.top/tags/%E6%B5%85%E8%AF%9D%E8%BD%BB%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Multisim下载，激活及汉化</title>
    <link href="http://coteaco.top/post/5fd6af00.html"/>
    <id>http://coteaco.top/post/5fd6af00.html</id>
    <published>2022-09-23T12:30:00.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载Multisim"><a href="#下载Multisim" class="headerlink" title="下载Multisim"></a>下载Multisim</h2><p>NI官网地址:<a href="https://www.ni.com/zh-cn/support/downloads/software-products/download.multisim.html#452133">https://www.ni.com/zh-cn/support/downloads/software-products/download.multisim.html#452133</a></p><p>选择14.3版本，专业版，在右边有离线安装包，下载后是iso镜像文件，win10以上可以直接打开，找到安装程序双击运行即可。直接默认安装，最后按照要求重启。</p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/1.png" alt="1"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/2.png" alt="2"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/3.png" alt="3"></p><h2 id="激活Multisim"><a href="#激活Multisim" class="headerlink" title="激活Multisim"></a>激活Multisim</h2><p>打开蓝奏云网址:<a href="https://wwd.lanzouv.com/i7WcU0c8f3pe">https://wwd.lanzouv.com/i7WcU0c8f3pe</a></p><p>下载压缩包，找到压缩包里的exe文件，以管理员权限运行，右击每个选择项前的小方框，选择Activate，小i方框全部变绿即可。</p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/4.png" alt="4"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/5.png" alt="5"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/6.png" alt="6"></p><h2 id="汉化Multisim"><a href="#汉化Multisim" class="headerlink" title="汉化Multisim"></a>汉化Multisim</h2><p>将压缩包里的Chinese-simplified文件夹拖入Multisim的安装双路径中的stringfiles文件夹中</p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/7.png" alt="7"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/8.png" alt="8"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/9.png" alt="9"></p><p><img src="https://image.coteaco.cn/img/post_img/5fd6af00/10.png" alt="10"></p><p>​安装完成。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;下载Multisim&quot;&gt;&lt;a href=&quot;#下载Multisim&quot; class=&quot;headerlink&quot; title=&quot;下载Multisim&quot;&gt;&lt;/a&gt;下载Multisim&lt;/h2&gt;&lt;p&gt;NI官网地址:&lt;a href=&quot;https://www.ni.com/zh-</summary>
      
    
    
    
    <category term="“教程”" scheme="http://coteaco.top/categories/%E2%80%9C%E6%95%99%E7%A8%8B%E2%80%9D/"/>
    
    
    <category term="Mulitism" scheme="http://coteaco.top/tags/Mulitism/"/>
    
  </entry>
  
  <entry>
    <title>浅话轻谈--亦使天下雨，仍有丝缕阳光</title>
    <link href="http://coteaco.top/post/3255e5da.html"/>
    <id>http://coteaco.top/post/3255e5da.html</id>
    <published>2022-09-20T16:30:30.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<p>百忙中偷闲，写点日常琐碎，侃心中所想，故言：浅话轻谈。</p><p>​开学不足一个月，又遇疫情，所遭烦心浮躁之事不胜堪扰。遂感内心轻浮不能静下心来，作业实验堆积如山，综测成绩令我不堪，心甚生逃避厌世。但是今日偶遇一事情令我为之动容。</p><p>​今日上午，学校突发消息做核酸，恰时天空下起小雨，虽然没有带伞，但是心想雨不大，于是去做核酸。排队时，霎时如大豆般的雨滴砸下来。当时我觉得这下可能要湿透了，然而后面一位同学把自己的伞向前伸了伸，我回头看看，映入我眼中的，是一个微笑的少年带着腼腆。什么也没说，默默的给我分享着他的伞，在这茫茫雨中。做核酸时间不长，我们没有什么对话，就分别在人海夹杂着雨水之中。如同在这阴暗的世界中，与我分享他那片刻繁星点点的乐土。</p><p>​我想或许如果我们再次相遇，也不一定能认识对方，但是就是这举手之劳的善意，让我心灵感到震撼。不知道从什么时候开始，我的眼中不在对着世界充满美好的向往，不再愿意做一些善事，成为了幼时自己最讨厌的人。。。。我不禁想着这是为什么。是埋怨这该死的社会么？还是该埋怨老天的不公？</p><p>​希望我能重拾那些宝贵的东西，心存一丝善意，即使这个世界仍在下雨。</p><p>​最近，读了林清玄的《唤不回的青春》，最后一篇《永远活着》里面有一段话：<strong>我们在人世间里积累的一些东西，追求的一些价值，是为了什么呢？那些催迫我们去追求财富最内部的动力是什么呢?如果能找出那个动力，说不定在财富里面也有菩提呢！</strong>我们为什么要去追求财富呢？是啊为什么呢？</p><p>​时间不早了，我要睡了，暂时写到这里吧，对自己说一声：晚安。</p><p>​最后在积累个句子：</p><p>​<strong>熄灭这灯，当你愿意</strong></p><p>​<strong>我将理解你的黑暗，将爱它</strong></p><p>​<strong>—— 泰戈尔</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;百忙中偷闲，写点日常琐碎，侃心中所想，故言：浅话轻谈。&lt;/p&gt;
&lt;p&gt;​	开学不足一个月，又遇疫情，所遭烦心浮躁之事不胜堪扰。遂感内心轻浮不能静下心来，作业实验堆积如山，综测成绩令我不堪，心甚生逃避厌世。但是今日偶遇一事情令我为之动容。&lt;/p&gt;
&lt;p&gt;​	今日上午，学校突发</summary>
      
    
    
    
    <category term="“随笔”" scheme="http://coteaco.top/categories/%E2%80%9C%E9%9A%8F%E7%AC%94%E2%80%9D/"/>
    
    
    <category term="-浅话轻谈" scheme="http://coteaco.top/tags/%E6%B5%85%E8%AF%9D%E8%BD%BB%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法测试以及使用方法</title>
    <link href="http://coteaco.top/post/2057c280.html"/>
    <id>http://coteaco.top/post/2057c280.html</id>
    <published>2022-09-13T08:50:00.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="😂-简要介绍"><a href="#😂-简要介绍" class="headerlink" title="😂 简要介绍"></a>😂 简要介绍</h2><p>​<strong>Markdown</strong>类似于<strong>HTML</strong>语言，是一种轻量级标记语言，语法简单，以<code>md</code>结尾的文本文件就是Markdown文件。</p><p>​它相较于 <strong>Word</strong>, 兼容性非常高, 可以跨平台使用, 不用担心奇奇怪怪的版本兼容问题. 同时, 有许多网站都支持或正在使用 <strong>Markdown</strong> 语法. 如 <strong>Github</strong> (等一系列代码托管平台), <strong>StackOverflow</strong>(等答疑平台), <strong>简书</strong>, <strong>语雀</strong> (等一系列笔记平台).</p><h2 id="🍴-工具"><a href="#🍴-工具" class="headerlink" title="🍴 工具"></a>🍴 工具</h2><p>​Markdown 只是一种语法. 那么用来写 Markdown 的文本编辑器呢? 我推荐的是 <strong>Typora</strong> 或者 <strong>VS Code</strong></p><h2 id="🍭-基础教程"><a href="#🍭-基础教程" class="headerlink" title="🍭 基础教程"></a>🍭 基础教程</h2><h3 id="0-标点全半角"><a href="#0-标点全半角" class="headerlink" title="0. 标点全半角"></a>0. 标点全半角</h3><p>​我们写文本的时候大多写的是中文, 可是输入法在输中文时使用的标点为全角标点, 如 <code>，。？！（）【】：；“”</code>. 这些中文符号是不能被Markdown转义的。建议书写 Markdown 的时候都用半角标点, 即英文标点, 如 <code>,.?!()[]:;&quot;&quot;</code>. 且每个半角标点在文本使用时加上后置空格, 符合英文标点的书写规范, 也更加美观.</p><p>​微软自带输入法，在使用中文输入法时按下时<code>Ctrl+.(句号)</code>,切换全半角.</p><h3 id="1-标题-n个-空格"><a href="#1-标题-n个-空格" class="headerlink" title="1. 标题[n个#+空格]"></a>1. 标题[n个#+空格]</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#　一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure><p>补充: 标题会在目录与大纲分级显示, 可以跳转. </p><p>​在 Typora 中建议开启 <code>严格模式</code>, 即不应为 <code>#标题</code>, 应为 <code># 标题</code>. </p><p>​应该要手动补上空格, 使得 Markdown 语法在其他文本编辑器上兼容. </p><h3 id="2-强调-“-”-“-”包围"><a href="#2-强调-“-”-“-”包围" class="headerlink" title="2.强调[“**” | “__”包围]"></a>2.强调[“**” | “__”包围]</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**欢迎来到我的博客**(建议使用)</span><br><span class="line">__欢迎来到我的博客__</span><br></pre></td></tr></table></figure><p>补充: 快捷键<code>Ctrl</code>+<code>B</code></p><p>E.G. <strong>欢迎来到我的博客</strong> </p><h3 id="3-斜体-用”-”-“-”包围"><a href="#3-斜体-用”-”-“-”包围" class="headerlink" title="3. 斜体[用”*” | “__”包围]"></a>3. 斜体[用”*” | “__”包围]</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*欢迎来到我的博客*(建议使用)</span><br><span class="line">_欢迎来到我的博客_</span><br></pre></td></tr></table></figure><p>补充: 快捷键<code>Ctrl</code>+<code>I</code></p><p>E.G. <em>欢迎来到我的博客</em></p><h3 id="4-删除线-用”-”包围"><a href="#4-删除线-用”-”包围" class="headerlink" title="4. 删除线[用”~~”包围]"></a>4. 删除线[用”~~”包围]</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~无聊ing~~</span><br></pre></td></tr></table></figure><p>E.G.  <del>无聊ing</del></p><p>。</p>]]></content>
    
    
    <summary type="html">测试Markdown语法</summary>
    
    
    
    <category term="“测试文档”" scheme="http://coteaco.top/categories/%E2%80%9C%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3%E2%80%9D/"/>
    
    
    <category term="-Markdown" scheme="http://coteaco.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>一些想说的话</title>
    <link href="http://coteaco.top/post/6bbceaeb.html"/>
    <id>http://coteaco.top/post/6bbceaeb.html</id>
    <published>2022-08-17T10:47:40.000Z</published>
    <updated>2022-10-23T15:51:07.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="博客搭建初步完成"><a href="#博客搭建初步完成" class="headerlink" title="博客搭建初步完成"></a>博客搭建初步完成</h2><p>​我的博客已经初具形态了,基本的搜索,发帖,分类,以及一些有趣功能已经实现了。在这七天的学习中，我也学会了一些基本的搭建网站的知识以及一些前端开发的知识，学了点html和css的皮毛。</p><p>接下来我会更新一些帖子的❤</p><h2 id="努力ing"><a href="#努力ing" class="headerlink" title="努力ing"></a>努力ing</h2><p>​由于自己刚开始学习Markdown，也是不太熟练的写文档（我会加油的😠），后面也会实现一些标签外挂，添加更多图片莱美化我的Blog的。不过担心图片过多导致网站加载过慢，我也搭建了我的图床（目前还是似懂非懂状态）。后期，我会将我的网站迁至云服务器中的（主要原因是目前没有钱。。。。嘤嘤嘤😢），我也会向一些大佬学习上的。</p><p>​在这里也是感谢<a href="https://hexo.io/about/">hexo</a>的作者，感谢知乎作者<a href="https://www.zhihu.com/people/mai-nv-hai-de-xiao-huo-chai-35-19">枫叶</a>，感谢B站up主<a href="https://space.bilibili.com/13282871">卷二兔</a>，正是因为大佬们的无私奉献，我能搭建好自己的博客。</p><h2 id="我的博客会更新什么"><a href="#我的博客会更新什么" class="headerlink" title="我的博客会更新什么"></a>我的博客会更新什么</h2><p>​其实我也不是很清楚的告诉你们具体会更新些什么,我搭建博客的目的就是记录自己大学日常和学习,以及一些在学习中的自己的理解,偶尔会更新一些教程之类的吧。</p><p>​我也不清楚自己会不会坚持下去,是三分钟热度还是坚持更新.当然还是希望自己能够坚持下去的。</p><p>🎉🎉🎉基本发帖内容就是：随笔杂谈，生活日常，算法题解，一些教程之类的</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>​同时我的b站账号呢，也会同步更新一些视频的（不知道会不会鸽），搭建个Blog整整花了7天时间（自己是个蒟蒻😭😭😭），</p><p>也是希望自己在大学中学到更多知识，也同时希望你们能有更好的未来。🎈</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;博客搭建初步完成&quot;&gt;&lt;a href=&quot;#博客搭建初步完成&quot; class=&quot;headerlink&quot; title=&quot;博客搭建初步完成&quot;&gt;&lt;/a&gt;博客搭建初步完成&lt;/h2&gt;&lt;p&gt;​	我的博客已经初具形态了,基本的搜索,发帖,分类,以及一些有趣功能已经实现了。在这七天的学</summary>
      
    
    
    
    <category term="“随笔”" scheme="http://coteaco.top/categories/%E2%80%9C%E9%9A%8F%E7%AC%94%E2%80%9D/"/>
    
    
    <category term="-博客" scheme="http://coteaco.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
